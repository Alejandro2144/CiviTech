version: '3.8'

services:
  autenticacion:
    build:
      context: ./backend/autenticacion
    container_name: autenticacion
    ports:
      - "8000:8000"
    env_file:
      - ./backend/autenticacion/.env
    restart: unless-stopped

  ciudadanos:
    build:
      context: ./backend/ciudadanos
    container_name: ciudadanos
    ports:
      - "8001:8001"
    env_file:
      - ./backend/ciudadanos/.env
    depends_on:
      - autenticacion
    restart: unless-stopped
    volumes:
      - ./backend/ciudadanos/data:/app/data

  documentos:
    build:
      context: ./backend/documentos
    container_name: documentos
    ports:
      - "8002:8002"
    env_file:
      - ./backend/documentos/.env
    depends_on:
      - autenticacion
    restart: unless-stopped
    volumes:
      - ./backend/documentos/data:/app/data

  minio:
    image: quay.io/minio/minio:RELEASE.2024-04-18T19-09-19Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    volumes:
      - ./backend/documentos/data:/data
    command: server --console-address ":9001" /data
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    restart: unless-stopped
    depends_on:
      - autenticacion
      - ciudadanos

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
    restart: unless-stopped

  interoperabilidad:
    build:
      context: ./backend/interoperabilidad
    container_name: interoperabilidad
    depends_on:
      rabbitmq:
        condition: service_healthy
      ciudadanos:
        condition: service_started
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq/
    ports:
      - "8004:8000"  
    restart: unless-stopped

  listener_worker:
    build:
      context: ./backend/listener_worker
    container_name: listener_worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      ciudadanos:
        condition: service_started
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq/
    restart: unless-stopped

  notificaciones:
      build: ./backend/notificaciones
      container_name: notificaciones
      ports:
        - "8003:8003"
      env_file:
        - ./backend/notificaciones/.env
      depends_on:
        - rabbitmq

volumes:
  rabbitmq-data:

networks:
  default:
    driver: bridge
